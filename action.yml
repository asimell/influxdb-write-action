name: 'InfluxDB Writer'
description: 'Parses workflow data and writes the data into a preconfigured InfluxDB instance.'
inputs:
  github_access_token:
    description: 'Token to access the API'
    required: true
  repository:
    description: 'Name of the repository where the workflow is'
    required: true
    default: "${{ github.GITHUB_REPOSITORY }}"
  workflow_run_id:
    description: 'ID of the workflow where data is to be gathered.'
    required: true
  influxdb_url:
    description: 'InfluxDB URL'
    required: true
  influxdb_bucket:
    description: 'InfluxDB bucket'
    required: true
  influxdb_org:
    description: 'InfluxDB organization'
    required: true
  influxdb_token:
    description: 'InfluxDB access token'
    required: true
  influxdb_timeout:
    description: 'InfluxDB connection timeout in milliseconds'
    required: false
    default: "10000"
  influxdb_verify_ssl:
    description: 'set this to false to skip verifying SSL certificate when calling API from https server'
    required: false
    default: "true"
  influxdb_ssl_ca_cert:
    description: 'set this to customize the certificate file to verify the peer'
    required: false
  influxdb_cert_file:
    decription: 'path to the certificate that will be used for mTLS authentication'
    required: false
  influxdb_cert_key_file:
    description: 'path to the file contains private key for mTLS certificate'
    required: false
  influxdb_cert_key_password:
    description: 'string or function which returns password for decrypting the mTLS private key'
    required: false
  influxdb_connection_pool_maxsize:
    description: 'set the number of connections to save that can be reused by urllib3'
    required: false
    default: "10000"
  influxdb_auth_basic:
    description: 'enable http basic authentication when talking to a InfluxDB 1.8.x without authentication but is accessed via reverse proxy with basic authentication (defaults to false)'
    required: false

runs:
  using: 'composite'
  steps:
    - shell: bash
      run: |
            export OWNER="$(echo "${{ inputs.repository }}" | awk -F / '{print $1}' | sed -e "s/:refs//")"
            export REPO="$(echo "${{ inputs.repository }}" | awk -F / '{print $2}' | sed -e "s/:refs//")"
            echo "REPOSITORY_OWNER=$OWNER" >> $GITHUB_ENV
            echo "REPOSITORY_NAME=$REPO" >> $GITHUB_ENV
    - shell: bash
      run: ${{ github.action_path }}/write.sh
      env:
        GH_ACCESS_TOKEN: ${{ inputs.gh_access_token }}
        OWNER: "${{ env.REPOSITORY_OWNER }}"
        REPO: "${{ env.REPOSITORY_NAME }}"
        WORKFLOW_RUN_ID: ${{ inputs.workflow_run_id }}
        INFLUXDB_V2_URL: "${{ inputs.influxdb_url }}"
        INFLUXDB_V2_BUCKET: "${{ inputs.influxdb_bucket }}"
        INFLUXDB_V2_ORG: "${{ inputs.influxdb_org }}"
        INFLUXDB_V2_TOKEN: "${{ inputs.influxdb_token }}"
        INFLUXDB_V2_TIMEOUT: "${{ inputs.influxdb_timeout }}"
        INFLUXDB_V2_VERIFY_SSL: "${{ inputs.influxdb_verify_ssl }}"
        INFLUXDB_V2_SSL_CA_CERT: "${{ inputs.influxdb_ssl_ca_cert }}"
        INFLUXDB_V2_SSL_CA_CERT: "${{ inputs.influxdb_ssl_ca_cert }}"
        INFLUXDB_V2_CERT_FILE: "${{ inputs.influxdb_cert_file }}"
        INFLUXDB_V2_CERT_KEY_FILE: "${{ inputs.influxdb_cert_key_file }}"
        INFLUXDB_V2_CERT_KEY_PASSWORD: "${{ inputs.influxdb_cert_key_password }}"
        INFLUXDB_V2_CONNECTION_POOL_MAXSIZE: "${{ inputs.influxdb_connection_pool_maxsize }}"
        INFLUXDB_V2_AUTH_BASIC: "${{ inputs.influxdb_auth_basic }}"